## 
## $Id: stop_overtime_jobs,v 1.1 2016/04/13 13:06:59 jozhao Exp $
## Usage:     autoload all functions 
## Date       By        Comment
## 2012/03/04 Jozhao    This is a part of LoadMgr
##

##define local variables
function stop_overtime_jobs {
   typeset -L38 task_id
   typeset statuscode 
   typeset begtime
   typeset endtime 
   typeset pid
   typeset ppid
   typeset i=0 
   typeset runing_pid
   typeset running_program
   typeset timestamp

   ## get lock
   while ! $(ln -s ${LOCKFILE} ${GETLOCK} 2>/dev/null)
   do  
      #echo "waiting lock for check status"
      sleep 1 
   done

   ## get pid for running jobs
   while read pid ppid task_id program_nm begtime endtime statuscode 
   do 
     #echo  $pid $ppid $task_id $program_nm $begtime $endtime $statuscode ...
     if [[ ${statuscode} == RUNNING  && ${program_nm} != LoadMgr.sh ]]; then
        runing_pid[$i]=${pid}
        running_program[$i]=$program_nm
        ((i+=1))
     fi
   done < ${LOGFILE} 
   rm -f  ${GETLOCK} 

   i=0
   while [[ $i -lt ${#runing_pid[*]} ]]
   do
      timestamp=`date +"%Y-%m-%d %H:%M:%S"`
      kill -0 ${runing_pid[$i]} 2>/dev/null
      rc=$?
      if [[  $rc -eq 0 ]]; then
         print "$timestamp --> stop tasks ${running_program[$i]}..."
         pkill -TERM -P ${runing_pid[$i]} 2>/dev/null
         sleep 2 
      fi
      ((i+=1))
   done
}
