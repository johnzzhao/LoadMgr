## 
## $Id: parse_status_log,v 1.7 2013/08/19 02:06:19 jozhao Exp $
## Usage: parse previous run log, it only run once at the resuming time. RUNNING status from a previous run log mean it was killed
## Date       By        Comment
## 2012/03/21 Jozhao    This is a part of LoadMgr
##
function  parse_status_log {
   typeset -L38 program_nm
   typeset task_id
   typeset statuscode 
   typeset begtime
   typeset endtime 
   typeset pid
   typeset ppid
   typeset i=0


   ## get lock
   while ! $(ln -s ${LOCKFILE} ${GETLOCK} 2>/dev/null)
   do  
      #echo "waiting lock for parsing"
      sleep ${REST_TIME} 
   done
 

   ## note on status code array
   ## 0 -> never run
   ## 1 -> running 
   ## 2 -> failed, terminated.
   ## 3 -> done

   ## update pid array 
   while read pid ppid task_id program_nm begtime endtime statuscode 
   do 
      i=0
      while [[ ${i} -lt ${#tasks[*]} ]] 
      do 
         if [[ ${task_id} == ${tasks[$i]} ]]; then
            
            pid_array[i]=$pid

            case $statuscode in   
            RUNNING) 
               status_array[i]=2 ;;
            DONE) 
               status_array[i]=3 ;;
            FAILED) 
               status_array[i]=2 ;;
            TERMINATED) 
               status_array[i]=2 ;;
            * ) 
               print "invalid status code ..." 
               return 255
            esac
            #echo $pid $ppid $task_id $program_nm $statuscode ${status_array[$i]} ...
         fi  
         
         ((i+=1))
      done
   done < ${LOGFILE}

   #remove getlock 
   #echo "removing lock for parsing"
   rm -f ${GETLOCK}
}
